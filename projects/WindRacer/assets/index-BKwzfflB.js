var H=Object.defineProperty;var $=(h,e,t)=>e in h?H(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var i=(h,e,t)=>($(h,typeof e!="symbol"?e+"":e,t),t);import{p as A}from"./phaser-orouK5Jc.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))a(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();class B extends A.Scene{constructor(){super("Boot")}preload(){}create(){this.scene.start("Preloader")}}const V=h=>h*180/Math.PI,k=h=>{let t=Math.atan2(h.x,-h.y)*(180/Math.PI);const a=t<0?360+t:t;return Math.floor(a)},L=h=>Math.sqrt(h.x*h.x+h.y*h.y);class G{constructor(e,t,a,s,o,n,l){i(this,"sprite");i(this,"body");i(this,"wettedArea");i(this,"length");i(this,"sailArea");i(this,"trimmedSailAngle");i(this,"lowerSailTrimLimit");i(this,"upperSailTrimLimit");i(this,"hullSpeed");i(this,"windVector",{x:0,y:0});i(this,"waterFrictionResistance",()=>{const e=Math.sqrt(this.body.velocity.x**2+this.body.velocity.y**2);return .5*1e-4*20*52*e**2+.3*Math.pow(e,.5)});i(this,"getApproximatedFrictionResistance",()=>.5*Math.sqrt(this.body.velocity.x**2+this.body.velocity.y**2)**2*.2);i(this,"waveResistance",()=>{const e=Math.sqrt(this.body.velocity.x**2+this.body.velocity.y**2);return e**5/this.hullSpeed**5+Math.pow(3,e-this.hullSpeed)});i(this,"getAWA",()=>{const e=this.apparentWindVector();if(Math.abs(e.x)<.01&&Math.abs(e.y)<.01)return 0;let t=V(Math.atan2(e.y,e.x));t=(t+360)%360;const a=this.getHeading();let s=(t-a+270)%360;return Math.round(s)});this.sprite=e.matter.add.sprite(t,a,"boat"),this.body=this.sprite.body,this.sprite.setScale(.15),this.wettedArea=s,this.length=o,this.body.frictionAir=0,this.body.mass=n,this.body.inverseMass=1/n,this.body.restitution=0,this.trimmedSailAngle=45,this.lowerSailTrimLimit=15,this.upperSailTrimLimit=90,this.hullSpeed=l}updateWindVector(e){this.windVector=e}applyFrictionForces(){const e=this.waterDragVector();this.applyForce(e);const t=this.getAntiDriftForce();this.applyForce(t),this.applyAntiRotationTorque()}waterDragVector(){const e=this.waterFrictionResistance(),t=this.waveResistance(),a=e+t,s=Math.atan2(this.body.velocity.y,this.body.velocity.x);return{x:-a*Math.cos(s),y:-a*Math.sin(s)}}applyForce(e){this.body.force.x+=e.x,this.body.force.y+=e.y}applyTorque(e){this.body.torque+=e}applyAntiRotationTorque(){this.body.torque-=this.body.angularVelocity*.4}applySailForces(){const e=this.liftForce();this.applyForce(e);const t=this.sailDragForce();this.applyForce(t)}getAntiDriftForce(){const e=this.getDriftVector(),t=Math.sqrt(e.x**2+e.y**2);if(t===0)return{x:0,y:0};const n=.5*.01*20*52*t**2+.3*Math.pow(t,.5),l=e.x/t,g=e.y/t,f=-l*n,u=-g*n;return{x:f,y:u}}takeSail(e){this.trimmedSailAngle>this.lowerSailTrimLimit&&(this.trimmedSailAngle-=e)}giveSail(e){this.trimmedSailAngle<this.upperSailTrimLimit&&(this.trimmedSailAngle+=e)}sailAngle(){const e=this.getAWA();return e<180?e>=this.trimmedSailAngle?this.trimmedSailAngle:e:360-e>=this.trimmedSailAngle?-this.trimmedSailAngle:e-360}getTack(){return this.getAWA()<180?"starboard":"port"}getAngleOfAttack(){const e=this.getAWA(),t=this.sailAngle();let a=e>180?e-360:e;return Math.abs(a-t)}liftUnitVector(){const e=this.apparentWindVector(),t=Math.sqrt(e.x**2+e.y**2);if(t<.001)return{x:0,y:0};const a=e.x/t,s=e.y/t;return this.getTack()==="starboard"?{x:-s,y:a}:{x:s,y:-a}}liftCoefficient(){const e=this.getAngleOfAttack();return e>11&&e<=32?-(1/300)*(e-32)**2+1.5:e>32&&e<=90?-(1.3/3364)*(e-32)**2+1.5:0}liftForce(){const t=.01*this.getAWS()**2*this.liftCoefficient(),a=this.liftUnitVector(),s=a.x*t,o=a.y*t;return{x:s,y:o}}sailDragCoefficient(){const e=this.getAngleOfAttack();return e>=0&&e<=11?.11:e>11&&e<=90?1.35/6400*(e-10)**2+.15:e>90&&e<=170?1.35/6400*(e-170)**2+.15:0}dragUnitVector(){const e=this.apparentWindVector(),t=Math.sqrt(e.x**2+e.y**2);return t<.01?{x:0,y:0}:{x:e.x/t,y:e.y/t}}sailDragForce(){const t=.01*this.getAWS()**2*this.sailDragCoefficient(),a=this.dragUnitVector(),s=a.x*t,o=a.y*t;return{x:s,y:o}}getHeading(){return V(this.body.angle)<0?Math.floor(360+V(this.body.angle)%360):Math.floor(V(this.body.angle)%360)}getCOG(){return this.isStationary()?this.getHeading():k(this.body.velocity)}isStationary(){return this.getSOG()<.1}getSOG(){return parseFloat(Math.sqrt(this.body.velocity.x**2+this.body.velocity.y**2).toFixed(1))}getPosition(){return this.body.position}getDriftVector(){const e=this.body.velocity.x,t=this.body.velocity.y,a=this.body.angle-Math.PI/2,s=Math.cos(a),o=Math.sin(a),n=e*s+t*o,l=n*s,g=n*o,f=e-l,u=t-g;return{x:f,y:u}}getDriftSpeed(){const e=this.getDriftVector();return Math.sqrt(e.x**2+e.y**2)}getAWS(){const e=this.apparentWindVector();return parseFloat(Math.sqrt(e.x**2+e.y**2).toFixed(1))}apparentWindVector(){return{x:this.windVector.x-this.body.velocity.x,y:this.windVector.y-this.body.velocity.y}}getDisplacement(){return this.wettedArea*this.length}}class K extends A.Scene{constructor(){super("Game");i(this,"camera");i(this,"background");i(this,"cursors");i(this,"boat");i(this,"rect");i(this,"islands",[]);i(this,"sailRect");i(this,"headingLine");i(this,"cogLine");i(this,"windParticles",[]);i(this,"windVector",{x:-5,y:15});i(this,"debugOverlay",null);i(this,"isDebugOverlay",!1);i(this,"dataViewOverlayContainer");i(this,"timeValueText");i(this,"sogValueText");i(this,"headingValueText");i(this,"cogValueText");i(this,"twsValueText");i(this,"gwdValueText");i(this,"awsValueText");i(this,"awaValueText");i(this,"trimmedSailAngleSliderTrack");i(this,"trimmedSailAngleSliderHandle");i(this,"trimmedSailAngleValueText");i(this,"sailAngleSliderTrack");i(this,"sailAngleSliderHandle");i(this,"sailAngleValueText");i(this,"gameTime",0);i(this,"sliderTrackWidthConst");i(this,"sliderTrackHeightConst");i(this,"sliderHandleWidthConst");i(this,"sliderHandleHeightConst");i(this,"currentLevel",1);i(this,"gameStarted",!1);i(this,"pressSpaceText");i(this,"restartLevelButton");i(this,"finishLine");i(this,"levelStartTime",0);i(this,"boatPreviousY")}init(t){this.currentLevel=t.level||1,this.gameStarted=!1,this.gameTime=0}create(){this.matter.world.setBounds(0,0,3e3,6e3),this.camera=this.cameras.main,this.add.rectangle(1500,3e3,3e3,6e3,13762044).setDepth(-3),this.background=this.add.tileSprite(0,0,1e4,1e4,"sea").setVisible(!1),this.islands=[];const s=[{x:800,y:1500,r:400,shape:"ellipse"},{x:1200,y:1700,r:350,shape:"ellipse"},{x:900,y:2e3,r:300,shape:"ellipse"},{x:600,y:1800,r:250,shape:"ellipse"},{x:2200,y:3500,r:500,shape:"ellipse"},{x:2500,y:3800,r:400,shape:"ellipse"},{x:2e3,y:3200,r:300,shape:"ellipse"},{x:500,y:4500,r:250,shape:"ellipse"},{x:700,y:4700,r:180,shape:"ellipse"},{x:1800,y:800,r:220,shape:"ellipse"},{x:2e3,y:600,r:180,shape:"ellipse"},{x:1500,y:5e3,r:150,shape:"ellipse"},{x:1600,y:5050,r:150,shape:"ellipse"},{x:1400,y:4950,r:150,shape:"ellipse"},{x:2800,y:1200,r:80,shape:"ellipse"},{x:2700,y:5200,r:100,shape:"ellipse"},{x:300,y:800,r:90,shape:"ellipse"}],o=8051191,n=13159580,l=0,g=.5,f=-2,u=-1;s.forEach(c=>{if(c.shape==="ellipse"&&typeof c.r=="number"){const b=c.r*1.3;this.add.ellipse(c.x,c.y,b*2,b*2,o).setStrokeStyle(g,l).setDepth(f);const S=this.add.ellipse(c.x,c.y,c.r*2,c.r*2,n).setStrokeStyle(g,l).setDepth(u);this.matter.add.gameObject(S,{shape:{type:"circle",radius:c.r},isStatic:!0}),this.islands.push(S)}}),this.boat=new G(this,1500,5700,20,30,12e3,4.5),this.boat.updateWindVector(this.windVector);const y=this.add.rectangle(0,0,6,50,16777215).setOrigin(.5,1);y.setDepth(1),this.sailRect=y;const x=400,F=this.add.line(0,0,0,0,0,-x,16711680).setOrigin(.5,0).setLineWidth(1);F.setDepth(2),this.headingLine=F;const O=this.add.line(0,0,0,0,0,-x,6733).setOrigin(.5,0).setLineWidth(1);O.setDepth(2),this.cogLine=O;const W=120;this.windParticles=[];for(let c=0;c<W;c++){const b=Math.random()*3e3,S=Math.random()*6e3,p=this.add.graphics();p.fillStyle(7045626,.85),p.fillEllipse(0,0,4,4),p.alpha=.85+Math.random()*.15,p.x=b,p.y=S,p.setDepth(1),this.windParticles.push(p)}if(this.registerWSAD(),this.isDebugOverlay){const c={font:"16px Arial",fill:"#ffffff",backgroundColor:"rgba(0,0,0,0.5)",padding:{x:0,y:0}};this.debugOverlay=this.add.text(10,10,"",c).setScrollFactor(0).setDepth(10)}this.matter.world.on("collisionstart",c=>{c.pairs.forEach(b=>{const S=b.bodyA,p=b.bodyB,v=this.matter.world.walls;let C=!1,m=null;if(S===this.boat.body?(C=!0,m=p):p===this.boat.body&&(C=!0,m=S),C&&m){const M=()=>{this.sys.isActive()&&(this.restartLevelButton&&this.restartLevelButton.setVisible(!1),this.matter.world.pause(),this.scene.start("GameOver",{level:this.currentLevel,time:this.gameTime}))};if(this.islands.some(P=>P.body===m)){M();return}if(v&&m.isStatic&&(m===v.left||m===v.right||m===v.top||m===v.bottom)){M();return}}})}),this._createDataViewOverlayElements(),this.pressSpaceText=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY,"Press SPACE to Start",{fontFamily:"Arial",fontSize:"48px",color:"#ffffff",stroke:"#000000",strokeThickness:6,align:"center"}).setOrigin(.5).setScrollFactor(0).setDepth(30);const T=100,w=200;this.finishLine={startDot:this.add.ellipse(w,T,20,20,16711680).setDepth(5),endDot:this.add.ellipse(3e3-w,T,20,20,16711680).setDepth(5),line:new Phaser.Geom.Line(w,T,3e3-w,T),graphics:this.add.graphics({lineStyle:{width:5,color:16711680}}).setDepth(5)},this.finishLine.graphics.strokeLineShape(this.finishLine.line),this.matter.world.pause(),this.input.keyboard?this.input.keyboard.on("keydown-SPACE",()=>{this.gameStarted||this.startGame()}):console.error("Keyboard input not available for spacebar."),this.boatPreviousY=this.boat.getPosition().y;const D=15;this.restartLevelButton=this.add.text(D,D,"Restart Level",{fontFamily:"Arial",fontSize:"20px",color:"#ffffff",backgroundColor:"rgba(0,0,0,0.5)",padding:{x:10,y:5}}).setScrollFactor(0).setDepth(30).setInteractive().setVisible(!1),this.restartLevelButton.on("pointerdown",()=>{this.gameStarted&&this.scene.start("Game",{level:this.currentLevel})})}startGame(){this.gameStarted=!0,this.pressSpaceText.setVisible(!1),this.restartLevelButton&&this.restartLevelButton.setVisible(!0),this.matter.world.resume(),this.levelStartTime=this.gameTime,this.boatPreviousY=this.boat.getPosition().y}update(t,a){const s=this.boat.getPosition().y;if(!this.gameStarted){this.camera.centerOn(this.boat.getPosition().x,this.boat.getPosition().y-250),this._updateDataViewOverlay();return}this.gameTime+=a/1e3,this.boat.updateWindVector(this.windVector),this.moveWithWSAD(),this.boat.applyFrictionForces(),this.boat.applySailForces(),this.camera.centerOn(this.boat.getPosition().x,this.boat.getPosition().y-250),this.updateSailVisualisation(),this.updateCourseLines(),this.updateWindParticles(),this.debugOverlay&&this.debugOverlay.setVisible(this.isDebugOverlay),this.isDebugOverlay&&this.debugOverlay&&this.displayDebugOverlay(),this._updateDataViewOverlay(),this.checkFinishLine(s),this.boatPreviousY=s}registerWSAD(){this.cursors=this.input.keyboard.createCursorKeys(),this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D)}moveWithWSAD(){const t=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.W),a=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.S),s=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.A),o=this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.D);t.isDown&&this.boat.takeSail(.15),a.isDown&&this.boat.giveSail(.15),s.isDown&&this.boat.applyTorque(-.008),o.isDown&&this.boat.applyTorque(.008)}updateCourseLines(){const t=this.boat.sprite;this.headingLine.x=t.x,this.headingLine.y=t.y,this.headingLine.rotation=t.rotation,this.cogLine.x=t.x,this.cogLine.y=t.y,this.cogLine.rotation=Phaser.Math.DegToRad(this.boat.getCOG())}updateSailVisualisation(){const t=this.boat.sprite,a=this.boat.sailAngle();this.sailRect.x=t.x,this.sailRect.y=t.y,this.sailRect.rotation=t.rotation+Phaser.Math.DegToRad(a+180)}updateWindParticles(){for(const t of this.windParticles)t.x+=this.windVector.x*.5,t.y+=this.windVector.y*.5,t.x<0&&(t.x+=3e3),t.x>3e3&&(t.x-=3e3),t.y<0&&(t.y+=6e3),t.y>6e3&&(t.y-=6e3)}displayDebugOverlay(){this.debugOverlay.setText(`
        Heading: ${this.boat.getHeading()} 
        COG: ${this.boat.getCOG()}
        SOG: ${this.boat.getSOG().toFixed(2)}
        Position: ${Math.floor(this.boat.body.position.x)}, ${Math.floor(this.boat.body.position.y)}
        Wind Vector: ${this.windVector.x.toFixed(2)}, ${this.windVector.y.toFixed(2)}
        TWS: ${L(this.windVector)} GWD: ${(k(this.windVector)+180)%360}
        AWS: ${this.boat.getAWS()} AWA: ${this.boat.getAWA()}
        Tack: ${this.boat.getTack()}
        Trimmed sail angle: ${this.boat.trimmedSailAngle.toFixed(2)}
        Sail Angle: ${this.boat.sailAngle().toFixed(0)}
        Angle of Attack: ${this.boat.getAngleOfAttack().toFixed(0)}
        Lift coefficient: ${this.boat.liftCoefficient().toFixed(2)}
        Lift unit vector: ${this.boat.liftUnitVector().x.toFixed(2)}, ${this.boat.liftUnitVector().y.toFixed(2)}
        SailLiftVector: ${this.boat.liftForce().x.toFixed(2)}, ${this.boat.liftForce().y.toFixed(2)}
        Drag unit vector: ${this.boat.dragUnitVector().x.toFixed(2)}, ${this.boat.dragUnitVector().y.toFixed(2)}
        Drag coefficient: ${this.boat.sailDragCoefficient().toFixed(2)}
        SailDragVector: ${this.boat.sailDragForce().x.toFixed(2)}, ${this.boat.sailDragForce().y.toFixed(2)}
        WaterDragVector: ${this.boat.waterDragVector().x.toFixed(2)}, ${this.boat.waterDragVector().y.toFixed(2)}
        AntiDriftVector: ${this.boat.getAntiDriftForce().x.toFixed(2)}, ${this.boat.getAntiDriftForce().y.toFixed(2)}`)}_createDataViewOverlayElements(){this.gameTime=0;const t=350,a=320,s=10,o=this.scale.width;this.dataViewOverlayContainer=this.add.container(o-t-s,s),this.dataViewOverlayContainer.setScrollFactor(0).setDepth(20);const n=this.add.graphics();n.fillStyle(0,.6),n.fillRect(0,0,t,a),this.dataViewOverlayContainer.add(n);const l={font:"14px Arial",fill:"#cccccc"},g={font:"24px Arial",fill:"#ffffff"},f={...g,align:"right"},u={font:"16px Arial",fill:"#ffffff"};let r=s;const d=s,y=t/2+s/2,x=t/2-s*1.5;this.dataViewOverlayContainer.add(this.add.text(d,r,"TIME",l)),this.dataViewOverlayContainer.add(this.add.text(y,r,"SOG",l)),r+=18,this.timeValueText=this.add.text(d,r,"00:00:00",g),this.sogValueText=this.add.text(y+x,r,"0.0kts",f).setOrigin(1,0),this.dataViewOverlayContainer.add([this.timeValueText,this.sogValueText]),r+=30,this.dataViewOverlayContainer.add(this.add.text(d,r,"HEADING",l)),this.dataViewOverlayContainer.add(this.add.text(y,r,"COG",l)),r+=18,this.headingValueText=this.add.text(d,r,"0°",g),this.cogValueText=this.add.text(y+x,r,"0°",f).setOrigin(1,0),this.dataViewOverlayContainer.add([this.headingValueText,this.cogValueText]),r+=30,this.dataViewOverlayContainer.add(this.add.text(d,r,"TWS",l)),this.dataViewOverlayContainer.add(this.add.text(y,r,"GWD",l)),r+=18,this.twsValueText=this.add.text(d,r,"0.0kts",g),this.gwdValueText=this.add.text(y+x,r,"0°",f).setOrigin(1,0),this.dataViewOverlayContainer.add([this.twsValueText,this.gwdValueText]),r+=30,this.dataViewOverlayContainer.add(this.add.text(d,r,"AWS",l)),this.dataViewOverlayContainer.add(this.add.text(y,r,"AWA",l)),r+=18,this.awsValueText=this.add.text(d,r,"0.0kts",g),this.awaValueText=this.add.text(y+x,r,"0°",f).setOrigin(1,0),this.dataViewOverlayContainer.add([this.awsValueText,this.awaValueText]),r+=35,this.sliderTrackWidthConst=t-s*2,this.sliderTrackHeightConst=10,this.sliderHandleWidthConst=8,this.sliderHandleHeightConst=20,this.dataViewOverlayContainer.add(this.add.text(d,r,"TRIMMED SAIL ANGLE",l)),this.trimmedSailAngleValueText=this.add.text(d+this.sliderTrackWidthConst,r+2,"0°",u).setOrigin(1,0),this.dataViewOverlayContainer.add(this.trimmedSailAngleValueText),r+=20,this.trimmedSailAngleSliderTrack=this.add.graphics().fillStyle(4473924).fillRect(0,0,this.sliderTrackWidthConst,this.sliderTrackHeightConst),this.trimmedSailAngleSliderTrack.setPosition(d,r),this.trimmedSailAngleSliderHandle=this.add.graphics().fillStyle(15658734).fillRect(0,-(this.sliderHandleHeightConst-this.sliderTrackHeightConst)/2,this.sliderHandleWidthConst,this.sliderHandleHeightConst),this.dataViewOverlayContainer.add([this.trimmedSailAngleSliderTrack,this.trimmedSailAngleSliderHandle]),r+=this.sliderTrackHeightConst+18,this.dataViewOverlayContainer.add(this.add.text(d,r,"SAIL ANGLE",l)),this.sailAngleValueText=this.add.text(d+this.sliderTrackWidthConst,r+2,"0°",u).setOrigin(1,0),this.dataViewOverlayContainer.add(this.sailAngleValueText),r+=20,this.sailAngleSliderTrack=this.add.graphics().fillStyle(4473924).fillRect(0,0,this.sliderTrackWidthConst,this.sliderTrackHeightConst),this.sailAngleSliderTrack.setPosition(d,r),this.sailAngleSliderHandle=this.add.graphics().fillStyle(15658734).fillRect(0,-(this.sliderHandleHeightConst-this.sliderTrackHeightConst)/2,this.sliderHandleWidthConst,this.sliderHandleHeightConst),this.dataViewOverlayContainer.add([this.sailAngleSliderTrack,this.sailAngleSliderHandle])}_updateDataViewOverlay(){if(!this.boat||!this.dataViewOverlayContainer)return;const t=this.gameStarted?this.gameTime-this.levelStartTime:0,a=Math.floor(t),s=Math.floor(a/3600),o=Math.floor(a%3600/60),n=a%60;this.timeValueText.setText(`${String(s).padStart(2,"0")}:${String(o).padStart(2,"0")}:${String(n).padStart(2,"0")}`),this.sogValueText.setText(`${this.boat.getSOG().toFixed(1)}kts`),this.headingValueText.setText(`${this.boat.getHeading()}°`),this.cogValueText.setText(`${this.boat.getCOG()}°`);const l=L(this.windVector),g=(k(this.windVector)+180)%360;this.twsValueText.setText(`${l.toFixed(1)}kts`),this.gwdValueText.setText(`${Math.round(g)}°`),this.awsValueText.setText(`${this.boat.getAWS().toFixed(1)}kts`),this.awaValueText.setText(`${this.boat.getAWA()}°`);const f=this.boat.trimmedSailAngle,u=this.trimmedSailAngleSliderTrack.x+f/90*(this.sliderTrackWidthConst-this.sliderHandleWidthConst);this.trimmedSailAngleSliderHandle.setPosition(u,this.trimmedSailAngleSliderTrack.y+this.sliderTrackHeightConst/2),this.trimmedSailAngleValueText.setText(`${f.toFixed(0)}°`);const r=Math.abs(this.boat.sailAngle()),d=this.sailAngleSliderTrack.x+r/90*(this.sliderTrackWidthConst-this.sliderHandleWidthConst);this.sailAngleSliderHandle.setPosition(d,this.sailAngleSliderTrack.y+this.sliderTrackHeightConst/2),this.sailAngleValueText.setText(`${r.toFixed(0)}°`)}checkFinishLine(t){if(!this.gameStarted)return;const a=this.boat.getPosition().x;t<this.finishLine.line.y1&&this.boatPreviousY>=this.finishLine.line.y1&&a>=this.finishLine.line.x1&&a<=this.finishLine.line.x2&&this.levelCompleted()}levelCompleted(){this.gameStarted=!1,this.matter.world.pause(),this.restartLevelButton&&this.restartLevelButton.setVisible(!1);const t=this.cameras.main.centerX,a=this.cameras.main.centerY,s=this.gameTime-this.levelStartTime,o=Math.floor(s),n=Math.floor(o/60),l=o%60,g=`${String(n).padStart(2,"0")}:${String(l).padStart(2,"0")}`;this.add.rectangle(t,a,450,250,0,.8).setScrollFactor(0).setDepth(30),this.add.text(t,a-60,`Level ${this.currentLevel} Completed!`,{fontFamily:"Arial",fontSize:"32px",color:"#ffffff",align:"center"}).setOrigin(.5).setScrollFactor(0).setDepth(31),this.add.text(t,a-10,`Time: ${g}`,{fontFamily:"Arial",fontSize:"24px",color:"#ffffff",align:"center"}).setOrigin(.5).setScrollFactor(0).setDepth(31),this.add.text(t,a+60,"Main Menu",{fontFamily:"Arial",fontSize:"24px",color:"#00ff00",backgroundColor:"#333333",padding:{x:15,y:8},align:"center"}).setOrigin(.5).setScrollFactor(0).setDepth(31).setInteractive().on("pointerdown",()=>{this.scene.start("MainMenu")})}}class R extends A.Scene{constructor(){super("GameOver");i(this,"camera");i(this,"background");i(this,"gameover_text");i(this,"retryButton");i(this,"mainMenuButton");i(this,"level");i(this,"levelTimePassed")}init(t){this.level=t.level,this.levelTimePassed=t.time}create(){this.camera=this.cameras.main,this.camera.setBackgroundColor(3342336),this.add.rectangle(this.cameras.main.centerX,this.cameras.main.centerY,this.cameras.main.width,this.cameras.main.height,0,.5).setOrigin(.5),this.gameover_text=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY-100,"Game Over",{fontFamily:"Arial Black",fontSize:64,color:"#ff0000",stroke:"#000000",strokeThickness:8,align:"center"}),this.gameover_text.setOrigin(.5),this.retryButton=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY+50,"Retry Level",{fontFamily:"Arial",fontSize:32,color:"#ffff00",stroke:"#000000",strokeThickness:5,align:"center",backgroundColor:"rgba(0,0,0,0.5)"}).setOrigin(.5).setInteractive(),this.retryButton.on("pointerdown",()=>{this.scene.start("Game",{level:this.level})}),this.mainMenuButton=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY+120,"Main Menu",{fontFamily:"Arial",fontSize:32,color:"#00ff00",stroke:"#000000",strokeThickness:5,align:"center",backgroundColor:"rgba(0,0,0,0.5)"}).setOrigin(.5).setInteractive(),this.mainMenuButton.on("pointerdown",()=>{this.scene.start("MainMenu")})}}class Y extends A.Scene{constructor(){super("MainMenu");i(this,"background");i(this,"logo");i(this,"title");i(this,"level1Button")}create(t){this.title=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY+50,"Main Menu",{fontFamily:"Arial Black",fontSize:38,color:"#ffffff",stroke:"#000000",strokeThickness:8,align:"center"}).setOrigin(.5),this.level1Button=this.add.text(this.cameras.main.centerX,this.cameras.main.centerY+150,"Level 1",{fontFamily:"Arial Black",fontSize:32,color:"#ffff00",stroke:"#000000",strokeThickness:6,align:"center"}).setOrigin(.5).setInteractive(),this.level1Button.on("pointerdown",()=>{this.scene.start("Game",{level:1})}),t&&t.level}}class I extends A.Scene{constructor(){super("Preloader")}init(){this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",t=>{e.width=4+460*t})}preload(){this.load.setPath("assets"),this.load.image("boat","boat.png")}create(){this.scene.start("MainMenu")}}const X={type:Phaser.AUTO,width:1800,height:1e3,parent:"game-container",backgroundColor:"#028af8",physics:{default:"matter",matter:{gravity:{x:0,y:0},setBounds:!1}},scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[B,I,Y,K,R]};new A.Game(X);
